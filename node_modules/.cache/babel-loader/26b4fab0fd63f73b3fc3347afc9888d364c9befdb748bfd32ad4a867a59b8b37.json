{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint-disable react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalManager from './ModalManager';\nimport ownerDocument from './utils/ownerDocument';\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\nfunction omitProps(props, propTypes) {\n  var keys = Object.keys(props);\n  var newProps = {};\n  keys.forEach(function (prop) {\n    if (!Object.prototype.hasOwnProperty.call(propTypes, prop)) {\n      newProps[prop] = props[prop];\n    }\n  });\n  return newProps;\n}\nvar manager;\n/**\r\n * Love them or hate them, `<Modal />` provides a solid foundation for creating dialogs, lightboxes, or whatever else.\r\n * The Modal component renders its `children` node in front of a backdrop component.\r\n *\r\n * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:\r\n *\r\n * - Manages dialog stacking when one-at-a-time just isn't enough.\r\n * - Creates a backdrop, for disabling interaction below the modal.\r\n * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\r\n * - It disables scrolling of the page content while open.\r\n * - Adds the appropriate ARIA roles are automatically.\r\n * - Easily pluggable animations via a `<Transition/>` component.\r\n *\r\n * Note that, in the same way the backdrop element prevents users from clicking or interacting\r\n * with the page content underneath the Modal, Screen readers also need to be signaled to not to\r\n * interact with page content while the Modal is open. To do this, we use a common technique of applying\r\n * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for\r\n * a Modal to be truly modal, it should have a `container` that is _outside_ your app's\r\n * React hierarchy (such as the default: document.body).\r\n */\n\nvar Modal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Modal, _React$Component);\n  function Modal() {\n    var _this;\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n    _this.state = {\n      exited: !_this.props.show\n    };\n    _this.onShow = function () {\n      var _this$props = _this.props,\n        container = _this$props.container,\n        containerClassName = _this$props.containerClassName,\n        onShow = _this$props.onShow;\n      _this.getModalManager().add(_assertThisInitialized(_this), container, containerClassName);\n      _this.removeKeydownListener = listen(document, 'keydown', _this.handleDocumentKeyDown);\n      _this.removeFocusListener = listen(document, 'focus',\n      // the timeout is necessary b/c this will run before the new modal is mounted\n      // and so steals focus from it\n      function () {\n        return setTimeout(_this.enforceFocus);\n      }, true);\n      if (onShow) {\n        onShow();\n      } // autofocus after onShow, to not trigger a focus event for previous\n      // modals before this one is shown.\n\n      _this.autoFocus();\n    };\n    _this.onHide = function () {\n      _this.getModalManager().remove(_assertThisInitialized(_this));\n      _this.removeKeydownListener();\n      _this.removeFocusListener();\n      if (_this.props.restoreFocus) {\n        _this.restoreLastFocus();\n      }\n    };\n    _this.setDialogRef = function (ref) {\n      _this.dialog = ref;\n    };\n    _this.setBackdropRef = function (ref) {\n      _this.backdrop = ref && ReactDOM.findDOMNode(ref);\n    };\n    _this.handleHidden = function () {\n      _this.setState({\n        exited: true\n      });\n      _this.onHide();\n      if (_this.props.onExited) {\n        var _this$props2;\n        (_this$props2 = _this.props).onExited.apply(_this$props2, arguments);\n      }\n    };\n    _this.handleBackdropClick = function (e) {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n      if (_this.props.onBackdropClick) {\n        _this.props.onBackdropClick(e);\n      }\n      if (_this.props.backdrop === true) {\n        _this.props.onHide();\n      }\n    };\n    _this.handleDocumentKeyDown = function (e) {\n      if (_this.props.keyboard && e.keyCode === 27 && _this.isTopModal()) {\n        if (_this.props.onEscapeKeyDown) {\n          _this.props.onEscapeKeyDown(e);\n        }\n        _this.props.onHide();\n      }\n    };\n    _this.enforceFocus = function () {\n      if (!_this.props.enforceFocus || !_this._isMounted || !_this.isTopModal()) {\n        return;\n      }\n      var currentActiveElement = activeElement(ownerDocument(_assertThisInitialized(_this)));\n      if (_this.dialog && !contains(_this.dialog, currentActiveElement)) {\n        _this.dialog.focus();\n      }\n    };\n    _this.renderBackdrop = function () {\n      var _this$props3 = _this.props,\n        renderBackdrop = _this$props3.renderBackdrop,\n        Transition = _this$props3.backdropTransition;\n      var backdrop = renderBackdrop({\n        ref: _this.setBackdropRef,\n        onClick: _this.handleBackdropClick\n      });\n      if (Transition) {\n        backdrop = React.createElement(Transition, {\n          appear: true,\n          \"in\": _this.props.show\n        }, backdrop);\n      }\n      return backdrop;\n    };\n    return _this;\n  }\n  Modal.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\n    if (nextProps.show) {\n      return {\n        exited: false\n      };\n    }\n    if (!nextProps.transition) {\n      // Otherwise let handleHidden take care of marking exited.\n      return {\n        exited: true\n      };\n    }\n    return null;\n  };\n  var _proto = Modal.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n    if (this.props.show) {\n      this.onShow();\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var transition = this.props.transition;\n    if (prevProps.show && !this.props.show && !transition) {\n      // Otherwise handleHidden will call this.\n      this.onHide();\n    } else if (!prevProps.show && this.props.show) {\n      this.onShow();\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var _this$props4 = this.props,\n      show = _this$props4.show,\n      transition = _this$props4.transition;\n    this._isMounted = false;\n    if (show || transition && !this.state.exited) {\n      this.onHide();\n    }\n  };\n  _proto.getSnapshotBeforeUpdate = function getSnapshotBeforeUpdate(prevProps) {\n    if (canUseDOM && !prevProps.show && this.props.show) {\n      this.lastFocus = activeElement();\n    }\n    return null;\n  };\n  _proto.getModalManager = function getModalManager() {\n    if (this.props.manager) {\n      return this.props.manager;\n    }\n    if (!manager) {\n      manager = new ModalManager();\n    }\n    return manager;\n  };\n  _proto.restoreLastFocus = function restoreLastFocus() {\n    // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n    if (this.lastFocus && this.lastFocus.focus) {\n      this.lastFocus.focus(this.props.restoreFocusOptions);\n      this.lastFocus = null;\n    }\n  };\n  _proto.autoFocus = function autoFocus() {\n    if (!this.props.autoFocus) return;\n    var currentActiveElement = activeElement(ownerDocument(this));\n    if (this.dialog && !contains(this.dialog, currentActiveElement)) {\n      this.lastFocus = currentActiveElement;\n      this.dialog.focus();\n    }\n  };\n  _proto.isTopModal = function isTopModal() {\n    return this.getModalManager().isTopModal(this);\n  };\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n      show = _this$props5.show,\n      container = _this$props5.container,\n      children = _this$props5.children,\n      renderDialog = _this$props5.renderDialog,\n      _this$props5$role = _this$props5.role,\n      role = _this$props5$role === void 0 ? 'dialog' : _this$props5$role,\n      Transition = _this$props5.transition,\n      backdrop = _this$props5.backdrop,\n      className = _this$props5.className,\n      style = _this$props5.style,\n      onExit = _this$props5.onExit,\n      onExiting = _this$props5.onExiting,\n      onEnter = _this$props5.onEnter,\n      onEntering = _this$props5.onEntering,\n      onEntered = _this$props5.onEntered,\n      props = _objectWithoutPropertiesLoose(_this$props5, [\"show\", \"container\", \"children\", \"renderDialog\", \"role\", \"transition\", \"backdrop\", \"className\", \"style\", \"onExit\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n    if (!(show || Transition && !this.state.exited)) {\n      return null;\n    }\n    var dialogProps = _extends({\n      role: role,\n      ref: this.setDialogRef,\n      // apparently only works on the dialog role element\n      'aria-modal': role === 'dialog' ? true : undefined\n    }, omitProps(props, Modal.propTypes), {\n      style: style,\n      className: className,\n      tabIndex: '-1'\n    });\n    var dialog = renderDialog ? renderDialog(dialogProps) : React.createElement(\"div\", dialogProps, React.cloneElement(children, {\n      role: 'document'\n    }));\n    if (Transition) {\n      dialog = React.createElement(Transition, {\n        appear: true,\n        unmountOnExit: true,\n        \"in\": show,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: this.handleHidden,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered\n      }, dialog);\n    }\n    return ReactDOM.createPortal(React.createElement(React.Fragment, null, backdrop && this.renderBackdrop(), dialog), container);\n  };\n  return Modal;\n}(React.Component); // dumb HOC for the sake react-docgen\n\nModal.propTypes = {\n  /**\r\n   * Set the visibility of the Modal\r\n   */\n  show: PropTypes.bool,\n  /**\r\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\r\n   *\r\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\r\n   * page content can be placed behind a virtual backdrop as well as a visual one.\r\n   */\n  container: PropTypes.any,\n  /**\r\n   * A callback fired when the Modal is opening.\r\n   */\n  onShow: PropTypes.func,\n  /**\r\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\r\n   *\r\n   * The `onHide` callback only signals intent from the Modal,\r\n   * you must actually set the `show` prop to `false` for the Modal to close.\r\n   */\n  onHide: PropTypes.func,\n  /**\r\n   * Include a backdrop component.\r\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n  /**\r\n   * A function that returns the dialog component. Useful for custom\r\n   * rendering. **Note:** the component should make sure to apply the provided ref.\r\n   *\r\n   * ```js\r\n   *  renderDialog={props => <MyDialog {...props} />}\r\n   * ```\r\n   */\n  renderDialog: PropTypes.func,\n  /**\r\n   * A function that returns a backdrop component. Useful for custom\r\n   * backdrop rendering.\r\n   *\r\n   * ```js\r\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\r\n   * ```\r\n   */\n  renderBackdrop: PropTypes.func,\n  /**\r\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\r\n   */\n  onEscapeKeyDown: PropTypes.func,\n  /**\r\n   * A callback fired when the backdrop, if specified, is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n  /**\r\n   * A css class or set of classes applied to the modal container when the modal is open,\r\n   * and removed when it is closed.\r\n   */\n  containerClassName: PropTypes.string,\n  /**\r\n   * Close the modal when escape key is pressed\r\n   */\n  keyboard: PropTypes.bool,\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the dialog component.\r\n   */\n  transition: PropTypes.elementType,\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the backdrop components.\r\n   */\n  backdropTransition: PropTypes.elementType,\n  /**\r\n   * When `true` The modal will automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes. This also\r\n   * works correctly with any Modal children that have the `autoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  autoFocus: PropTypes.bool,\n  /**\r\n   * When `true` The modal will prevent focus from leaving the Modal while open.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  enforceFocus: PropTypes.bool,\n  /**\r\n   * When `true` The modal will restore focus to previously focused element once\r\n   * modal is hidden\r\n   */\n  restoreFocus: PropTypes.bool,\n  /**\r\n   * Options passed to focus function when `restoreFocus` is set to `true`\r\n   *\r\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\r\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n  /**\r\n   * Callback fired before the Modal transitions in\r\n   */\n  onEnter: PropTypes.func,\n  /**\r\n   * Callback fired as the Modal begins to transition in\r\n   */\n  onEntering: PropTypes.func,\n  /**\r\n   * Callback fired after the Modal finishes transitioning in\r\n   */\n  onEntered: PropTypes.func,\n  /**\r\n   * Callback fired right before the Modal transitions out\r\n   */\n  onExit: PropTypes.func,\n  /**\r\n   * Callback fired as the Modal begins to transition out\r\n   */\n  onExiting: PropTypes.func,\n  /**\r\n   * Callback fired after the Modal finishes transitioning out\r\n   */\n  onExited: PropTypes.func,\n  /**\r\n   * A ModalManager instance used to track and manage the state of open\r\n   * Modals. Useful when customizing how modals interact within a container\r\n   */\n  manager: PropTypes.object\n};\nModal.defaultProps = {\n  show: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  onHide: function onHide() {},\n  renderBackdrop: function renderBackdrop(props) {\n    return React.createElement(\"div\", props);\n  }\n};\nfunction forwardRef(Component) {\n  // eslint-disable-next-line react/display-name\n  var ModalWithContainer = React.forwardRef(function (props, ref) {\n    var resolved = useWaitForDOMRef(props.container);\n    return resolved ? React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      container: resolved\n    })) : null;\n  });\n  ModalWithContainer.Manager = ModalManager;\n  ModalWithContainer._Inner = Component;\n  return ModalWithContainer;\n}\nvar ModalWithContainer = forwardRef(Modal);\nModalWithContainer.Manager = ModalManager;\nexport default ModalWithContainer;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","activeElement","contains","canUseDOM","listen","PropTypes","React","ReactDOM","ModalManager","ownerDocument","useWaitForDOMRef","omitProps","props","propTypes","keys","Object","newProps","forEach","prop","prototype","hasOwnProperty","call","manager","Modal","_React$Component","_this","_len","arguments","length","_args","Array","_key","apply","concat","state","exited","show","onShow","_this$props","container","containerClassName","getModalManager","add","removeKeydownListener","document","handleDocumentKeyDown","removeFocusListener","setTimeout","enforceFocus","autoFocus","onHide","remove","restoreFocus","restoreLastFocus","setDialogRef","ref","dialog","setBackdropRef","backdrop","findDOMNode","handleHidden","setState","onExited","_this$props2","handleBackdropClick","e","target","currentTarget","onBackdropClick","keyboard","keyCode","isTopModal","onEscapeKeyDown","_isMounted","currentActiveElement","focus","renderBackdrop","_this$props3","Transition","backdropTransition","onClick","createElement","appear","getDerivedStateFromProps","nextProps","transition","_proto","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_this$props4","getSnapshotBeforeUpdate","lastFocus","restoreFocusOptions","render","_this$props5","children","renderDialog","_this$props5$role","role","className","style","onExit","onExiting","onEnter","onEntering","onEntered","dialogProps","undefined","tabIndex","cloneElement","unmountOnExit","createPortal","Fragment","Component","bool","any","func","oneOfType","oneOf","string","elementType","shape","preventScroll","object","defaultProps","forwardRef","ModalWithContainer","resolved","Manager","_Inner"],"sources":["E:/projects/my_portfolio/website/abinashbordoloi.github.io/node_modules/react-overlays/esm/Modal.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\r\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\n\r\n/* eslint-disable react/prop-types */\r\nimport activeElement from 'dom-helpers/activeElement';\r\nimport contains from 'dom-helpers/contains';\r\nimport canUseDOM from 'dom-helpers/canUseDOM';\r\nimport listen from 'dom-helpers/listen';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ModalManager from './ModalManager';\r\nimport ownerDocument from './utils/ownerDocument';\r\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\r\n\r\nfunction omitProps(props, propTypes) {\r\n  var keys = Object.keys(props);\r\n  var newProps = {};\r\n  keys.forEach(function (prop) {\r\n    if (!Object.prototype.hasOwnProperty.call(propTypes, prop)) {\r\n      newProps[prop] = props[prop];\r\n    }\r\n  });\r\n  return newProps;\r\n}\r\n\r\nvar manager;\r\n/**\r\n * Love them or hate them, `<Modal />` provides a solid foundation for creating dialogs, lightboxes, or whatever else.\r\n * The Modal component renders its `children` node in front of a backdrop component.\r\n *\r\n * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:\r\n *\r\n * - Manages dialog stacking when one-at-a-time just isn't enough.\r\n * - Creates a backdrop, for disabling interaction below the modal.\r\n * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\r\n * - It disables scrolling of the page content while open.\r\n * - Adds the appropriate ARIA roles are automatically.\r\n * - Easily pluggable animations via a `<Transition/>` component.\r\n *\r\n * Note that, in the same way the backdrop element prevents users from clicking or interacting\r\n * with the page content underneath the Modal, Screen readers also need to be signaled to not to\r\n * interact with page content while the Modal is open. To do this, we use a common technique of applying\r\n * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for\r\n * a Modal to be truly modal, it should have a `container` that is _outside_ your app's\r\n * React hierarchy (such as the default: document.body).\r\n */\r\n\r\nvar Modal = /*#__PURE__*/function (_React$Component) {\r\n  _inheritsLoose(Modal, _React$Component);\r\n\r\n  function Modal() {\r\n    var _this;\r\n\r\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      _args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\r\n    _this.state = {\r\n      exited: !_this.props.show\r\n    };\r\n\r\n    _this.onShow = function () {\r\n      var _this$props = _this.props,\r\n          container = _this$props.container,\r\n          containerClassName = _this$props.containerClassName,\r\n          onShow = _this$props.onShow;\r\n\r\n      _this.getModalManager().add(_assertThisInitialized(_this), container, containerClassName);\r\n\r\n      _this.removeKeydownListener = listen(document, 'keydown', _this.handleDocumentKeyDown);\r\n      _this.removeFocusListener = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\r\n      // and so steals focus from it\r\n      function () {\r\n        return setTimeout(_this.enforceFocus);\r\n      }, true);\r\n\r\n      if (onShow) {\r\n        onShow();\r\n      } // autofocus after onShow, to not trigger a focus event for previous\r\n      // modals before this one is shown.\r\n\r\n\r\n      _this.autoFocus();\r\n    };\r\n\r\n    _this.onHide = function () {\r\n      _this.getModalManager().remove(_assertThisInitialized(_this));\r\n\r\n      _this.removeKeydownListener();\r\n\r\n      _this.removeFocusListener();\r\n\r\n      if (_this.props.restoreFocus) {\r\n        _this.restoreLastFocus();\r\n      }\r\n    };\r\n\r\n    _this.setDialogRef = function (ref) {\r\n      _this.dialog = ref;\r\n    };\r\n\r\n    _this.setBackdropRef = function (ref) {\r\n      _this.backdrop = ref && ReactDOM.findDOMNode(ref);\r\n    };\r\n\r\n    _this.handleHidden = function () {\r\n      _this.setState({\r\n        exited: true\r\n      });\r\n\r\n      _this.onHide();\r\n\r\n      if (_this.props.onExited) {\r\n        var _this$props2;\r\n\r\n        (_this$props2 = _this.props).onExited.apply(_this$props2, arguments);\r\n      }\r\n    };\r\n\r\n    _this.handleBackdropClick = function (e) {\r\n      if (e.target !== e.currentTarget) {\r\n        return;\r\n      }\r\n\r\n      if (_this.props.onBackdropClick) {\r\n        _this.props.onBackdropClick(e);\r\n      }\r\n\r\n      if (_this.props.backdrop === true) {\r\n        _this.props.onHide();\r\n      }\r\n    };\r\n\r\n    _this.handleDocumentKeyDown = function (e) {\r\n      if (_this.props.keyboard && e.keyCode === 27 && _this.isTopModal()) {\r\n        if (_this.props.onEscapeKeyDown) {\r\n          _this.props.onEscapeKeyDown(e);\r\n        }\r\n\r\n        _this.props.onHide();\r\n      }\r\n    };\r\n\r\n    _this.enforceFocus = function () {\r\n      if (!_this.props.enforceFocus || !_this._isMounted || !_this.isTopModal()) {\r\n        return;\r\n      }\r\n\r\n      var currentActiveElement = activeElement(ownerDocument(_assertThisInitialized(_this)));\r\n\r\n      if (_this.dialog && !contains(_this.dialog, currentActiveElement)) {\r\n        _this.dialog.focus();\r\n      }\r\n    };\r\n\r\n    _this.renderBackdrop = function () {\r\n      var _this$props3 = _this.props,\r\n          renderBackdrop = _this$props3.renderBackdrop,\r\n          Transition = _this$props3.backdropTransition;\r\n      var backdrop = renderBackdrop({\r\n        ref: _this.setBackdropRef,\r\n        onClick: _this.handleBackdropClick\r\n      });\r\n\r\n      if (Transition) {\r\n        backdrop = React.createElement(Transition, {\r\n          appear: true,\r\n          \"in\": _this.props.show\r\n        }, backdrop);\r\n      }\r\n\r\n      return backdrop;\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  Modal.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\r\n    if (nextProps.show) {\r\n      return {\r\n        exited: false\r\n      };\r\n    }\r\n\r\n    if (!nextProps.transition) {\r\n      // Otherwise let handleHidden take care of marking exited.\r\n      return {\r\n        exited: true\r\n      };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  var _proto = Modal.prototype;\r\n\r\n  _proto.componentDidMount = function componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    if (this.props.show) {\r\n      this.onShow();\r\n    }\r\n  };\r\n\r\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\r\n    var transition = this.props.transition;\r\n\r\n    if (prevProps.show && !this.props.show && !transition) {\r\n      // Otherwise handleHidden will call this.\r\n      this.onHide();\r\n    } else if (!prevProps.show && this.props.show) {\r\n      this.onShow();\r\n    }\r\n  };\r\n\r\n  _proto.componentWillUnmount = function componentWillUnmount() {\r\n    var _this$props4 = this.props,\r\n        show = _this$props4.show,\r\n        transition = _this$props4.transition;\r\n    this._isMounted = false;\r\n\r\n    if (show || transition && !this.state.exited) {\r\n      this.onHide();\r\n    }\r\n  };\r\n\r\n  _proto.getSnapshotBeforeUpdate = function getSnapshotBeforeUpdate(prevProps) {\r\n    if (canUseDOM && !prevProps.show && this.props.show) {\r\n      this.lastFocus = activeElement();\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  _proto.getModalManager = function getModalManager() {\r\n    if (this.props.manager) {\r\n      return this.props.manager;\r\n    }\r\n\r\n    if (!manager) {\r\n      manager = new ModalManager();\r\n    }\r\n\r\n    return manager;\r\n  };\r\n\r\n  _proto.restoreLastFocus = function restoreLastFocus() {\r\n    // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\r\n    if (this.lastFocus && this.lastFocus.focus) {\r\n      this.lastFocus.focus(this.props.restoreFocusOptions);\r\n      this.lastFocus = null;\r\n    }\r\n  };\r\n\r\n  _proto.autoFocus = function autoFocus() {\r\n    if (!this.props.autoFocus) return;\r\n    var currentActiveElement = activeElement(ownerDocument(this));\r\n\r\n    if (this.dialog && !contains(this.dialog, currentActiveElement)) {\r\n      this.lastFocus = currentActiveElement;\r\n      this.dialog.focus();\r\n    }\r\n  };\r\n\r\n  _proto.isTopModal = function isTopModal() {\r\n    return this.getModalManager().isTopModal(this);\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var _this$props5 = this.props,\r\n        show = _this$props5.show,\r\n        container = _this$props5.container,\r\n        children = _this$props5.children,\r\n        renderDialog = _this$props5.renderDialog,\r\n        _this$props5$role = _this$props5.role,\r\n        role = _this$props5$role === void 0 ? 'dialog' : _this$props5$role,\r\n        Transition = _this$props5.transition,\r\n        backdrop = _this$props5.backdrop,\r\n        className = _this$props5.className,\r\n        style = _this$props5.style,\r\n        onExit = _this$props5.onExit,\r\n        onExiting = _this$props5.onExiting,\r\n        onEnter = _this$props5.onEnter,\r\n        onEntering = _this$props5.onEntering,\r\n        onEntered = _this$props5.onEntered,\r\n        props = _objectWithoutPropertiesLoose(_this$props5, [\"show\", \"container\", \"children\", \"renderDialog\", \"role\", \"transition\", \"backdrop\", \"className\", \"style\", \"onExit\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\r\n\r\n    if (!(show || Transition && !this.state.exited)) {\r\n      return null;\r\n    }\r\n\r\n    var dialogProps = _extends({\r\n      role: role,\r\n      ref: this.setDialogRef,\r\n      // apparently only works on the dialog role element\r\n      'aria-modal': role === 'dialog' ? true : undefined\r\n    }, omitProps(props, Modal.propTypes), {\r\n      style: style,\r\n      className: className,\r\n      tabIndex: '-1'\r\n    });\r\n\r\n    var dialog = renderDialog ? renderDialog(dialogProps) : React.createElement(\"div\", dialogProps, React.cloneElement(children, {\r\n      role: 'document'\r\n    }));\r\n\r\n    if (Transition) {\r\n      dialog = React.createElement(Transition, {\r\n        appear: true,\r\n        unmountOnExit: true,\r\n        \"in\": show,\r\n        onExit: onExit,\r\n        onExiting: onExiting,\r\n        onExited: this.handleHidden,\r\n        onEnter: onEnter,\r\n        onEntering: onEntering,\r\n        onEntered: onEntered\r\n      }, dialog);\r\n    }\r\n\r\n    return ReactDOM.createPortal(React.createElement(React.Fragment, null, backdrop && this.renderBackdrop(), dialog), container);\r\n  };\r\n\r\n  return Modal;\r\n}(React.Component); // dumb HOC for the sake react-docgen\r\n\r\n\r\nModal.propTypes = {\r\n  /**\r\n   * Set the visibility of the Modal\r\n   */\r\n  show: PropTypes.bool,\r\n\r\n  /**\r\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\r\n   *\r\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\r\n   * page content can be placed behind a virtual backdrop as well as a visual one.\r\n   */\r\n  container: PropTypes.any,\r\n\r\n  /**\r\n   * A callback fired when the Modal is opening.\r\n   */\r\n  onShow: PropTypes.func,\r\n\r\n  /**\r\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\r\n   *\r\n   * The `onHide` callback only signals intent from the Modal,\r\n   * you must actually set the `show` prop to `false` for the Modal to close.\r\n   */\r\n  onHide: PropTypes.func,\r\n\r\n  /**\r\n   * Include a backdrop component.\r\n   */\r\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\r\n\r\n  /**\r\n   * A function that returns the dialog component. Useful for custom\r\n   * rendering. **Note:** the component should make sure to apply the provided ref.\r\n   *\r\n   * ```js\r\n   *  renderDialog={props => <MyDialog {...props} />}\r\n   * ```\r\n   */\r\n  renderDialog: PropTypes.func,\r\n\r\n  /**\r\n   * A function that returns a backdrop component. Useful for custom\r\n   * backdrop rendering.\r\n   *\r\n   * ```js\r\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\r\n   * ```\r\n   */\r\n  renderBackdrop: PropTypes.func,\r\n\r\n  /**\r\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\r\n   */\r\n  onEscapeKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * A callback fired when the backdrop, if specified, is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * A css class or set of classes applied to the modal container when the modal is open,\r\n   * and removed when it is closed.\r\n   */\r\n  containerClassName: PropTypes.string,\r\n\r\n  /**\r\n   * Close the modal when escape key is pressed\r\n   */\r\n  keyboard: PropTypes.bool,\r\n\r\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the dialog component.\r\n   */\r\n  transition: PropTypes.elementType,\r\n\r\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the backdrop components.\r\n   */\r\n  backdropTransition: PropTypes.elementType,\r\n\r\n  /**\r\n   * When `true` The modal will automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes. This also\r\n   * works correctly with any Modal children that have the `autoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * When `true` The modal will prevent focus from leaving the Modal while open.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  enforceFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * When `true` The modal will restore focus to previously focused element once\r\n   * modal is hidden\r\n   */\r\n  restoreFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Options passed to focus function when `restoreFocus` is set to `true`\r\n   *\r\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\r\n   */\r\n  restoreFocusOptions: PropTypes.shape({\r\n    preventScroll: PropTypes.bool\r\n  }),\r\n\r\n  /**\r\n   * Callback fired before the Modal transitions in\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Modal begins to transition in\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Modal finishes transitioning in\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired right before the Modal transitions out\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Modal begins to transition out\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Modal finishes transitioning out\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * A ModalManager instance used to track and manage the state of open\r\n   * Modals. Useful when customizing how modals interact within a container\r\n   */\r\n  manager: PropTypes.object\r\n};\r\nModal.defaultProps = {\r\n  show: false,\r\n  role: 'dialog',\r\n  backdrop: true,\r\n  keyboard: true,\r\n  autoFocus: true,\r\n  enforceFocus: true,\r\n  restoreFocus: true,\r\n  onHide: function onHide() {},\r\n  renderBackdrop: function renderBackdrop(props) {\r\n    return React.createElement(\"div\", props);\r\n  }\r\n};\r\n\r\nfunction forwardRef(Component) {\r\n  // eslint-disable-next-line react/display-name\r\n  var ModalWithContainer = React.forwardRef(function (props, ref) {\r\n    var resolved = useWaitForDOMRef(props.container);\r\n    return resolved ? React.createElement(Component, _extends({}, props, {\r\n      ref: ref,\r\n      container: resolved\r\n    })) : null;\r\n  });\r\n  ModalWithContainer.Manager = ModalManager;\r\n  ModalWithContainer._Inner = Component;\r\n  return ModalWithContainer;\r\n}\r\n\r\nvar ModalWithContainer = forwardRef(Modal);\r\nModalWithContainer.Manager = ModalManager;\r\nexport default ModalWithContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}