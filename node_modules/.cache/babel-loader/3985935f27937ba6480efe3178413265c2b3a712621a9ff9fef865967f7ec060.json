{"ast":null,"code":"var baseIsEqual = require('./_baseIsEqual'),\n  get = require('./get'),\n  hasIn = require('./hasIn'),\n  isKey = require('./_isKey'),\n  isStrictComparable = require('./_isStrictComparable'),\n  matchesStrictComparable = require('./_matchesStrictComparable'),\n  toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n  COMPARE_UNORDERED_FLAG = 2;\n\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\nmodule.exports = baseMatchesProperty;","map":{"version":3,"names":["baseIsEqual","require","get","hasIn","isKey","isStrictComparable","matchesStrictComparable","toKey","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","object","objValue","undefined","module","exports"],"sources":["E:/projects/my_portfolio/website/abinashbordoloi.github.io/node_modules/lodash/_baseMatchesProperty.js"],"sourcesContent":["var baseIsEqual = require('./_baseIsEqual'),\r\n    get = require('./get'),\r\n    hasIn = require('./hasIn'),\r\n    isKey = require('./_isKey'),\r\n    isStrictComparable = require('./_isStrictComparable'),\r\n    matchesStrictComparable = require('./_matchesStrictComparable'),\r\n    toKey = require('./_toKey');\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatchesProperty(path, srcValue) {\r\n  if (isKey(path) && isStrictComparable(srcValue)) {\r\n    return matchesStrictComparable(toKey(path), srcValue);\r\n  }\r\n  return function(object) {\r\n    var objValue = get(object, path);\r\n    return (objValue === undefined && objValue === srcValue)\r\n      ? hasIn(object, path)\r\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\r\n  };\r\n}\r\n\r\nmodule.exports = baseMatchesProperty;\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;EACvCC,GAAG,GAAGD,OAAO,CAAC,OAAO,CAAC;EACtBE,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;EAC1BG,KAAK,GAAGH,OAAO,CAAC,UAAU,CAAC;EAC3BI,kBAAkB,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;EACrDK,uBAAuB,GAAGL,OAAO,CAAC,4BAA4B,CAAC;EAC/DM,KAAK,GAAGN,OAAO,CAAC,UAAU,CAAC;;AAE/B;AACA,IAAIO,oBAAoB,GAAG,CAAC;EACxBC,sBAAsB,GAAG,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC3C,IAAIR,KAAK,CAACO,IAAI,CAAC,IAAIN,kBAAkB,CAACO,QAAQ,CAAC,EAAE;IAC/C,OAAON,uBAAuB,CAACC,KAAK,CAACI,IAAI,CAAC,EAAEC,QAAQ,CAAC;EACvD;EACA,OAAO,UAASC,MAAM,EAAE;IACtB,IAAIC,QAAQ,GAAGZ,GAAG,CAACW,MAAM,EAAEF,IAAI,CAAC;IAChC,OAAQG,QAAQ,KAAKC,SAAS,IAAID,QAAQ,KAAKF,QAAQ,GACnDT,KAAK,CAACU,MAAM,EAAEF,IAAI,CAAC,GACnBX,WAAW,CAACY,QAAQ,EAAEE,QAAQ,EAAEN,oBAAoB,GAAGC,sBAAsB,CAAC;EACpF,CAAC;AACH;AAEAO,MAAM,CAACC,OAAO,GAAGP,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}