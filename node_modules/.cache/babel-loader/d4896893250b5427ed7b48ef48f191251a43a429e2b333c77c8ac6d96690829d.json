{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar propTypes = {\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\n  id: PropTypes.any,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables the toggle NavLink  */\n  disabled: PropTypes.bool,\n  /** Style the toggle NavLink as active  */\n  active: PropTypes.bool,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\n  rootCloseEvent: PropTypes.string,\n  /** @ignore */\n  bsPrefix: PropTypes.string\n};\nvar NavDropdown = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    children = _ref.children,\n    bsPrefix = _ref.bsPrefix,\n    rootCloseEvent = _ref.rootCloseEvent,\n    menuRole = _ref.menuRole,\n    disabled = _ref.disabled,\n    active = _ref.active,\n    props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\"]);\n  return React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: NavItem\n  }), React.createElement(Dropdown.Toggle, {\n    id: id,\n    eventKey: null,\n    active: active,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    as: NavLink\n  }, title), React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nNavDropdown.displayName = 'NavDropdown';\nNavDropdown.propTypes = propTypes;\nNavDropdown.Item = Dropdown.Item;\nNavDropdown.Divider = Dropdown.Divider;\nNavDropdown.Header = Dropdown.Header;\nexport default NavDropdown;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Dropdown","NavItem","NavLink","propTypes","id","any","onClick","func","title","node","isRequired","disabled","bool","active","menuRole","string","rootCloseEvent","bsPrefix","NavDropdown","forwardRef","_ref","ref","children","props","createElement","as","Toggle","eventKey","childBsPrefix","Menu","role","displayName","Item","Divider","Header"],"sources":["E:/projects/my_portfolio/website/abinashbordoloi.github.io/node_modules/react-bootstrap/esm/NavDropdown.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dropdown from './Dropdown';\r\nimport NavItem from './NavItem';\r\nimport NavLink from './NavLink';\r\nvar propTypes = {\r\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\r\n  id: PropTypes.any,\r\n\r\n  /** An `onClick` handler passed to the Toggle component */\r\n  onClick: PropTypes.func,\r\n\r\n  /** The content of the non-toggle Button.  */\r\n  title: PropTypes.node.isRequired,\r\n\r\n  /** Disables the toggle NavLink  */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** Style the toggle NavLink as active  */\r\n  active: PropTypes.bool,\r\n\r\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\r\n  menuRole: PropTypes.string,\r\n\r\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\r\n  rootCloseEvent: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  bsPrefix: PropTypes.string\r\n};\r\nvar NavDropdown = React.forwardRef(function (_ref, ref) {\r\n  var id = _ref.id,\r\n      title = _ref.title,\r\n      children = _ref.children,\r\n      bsPrefix = _ref.bsPrefix,\r\n      rootCloseEvent = _ref.rootCloseEvent,\r\n      menuRole = _ref.menuRole,\r\n      disabled = _ref.disabled,\r\n      active = _ref.active,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\"]);\r\n\r\n  return React.createElement(Dropdown, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    as: NavItem\r\n  }), React.createElement(Dropdown.Toggle, {\r\n    id: id,\r\n    eventKey: null,\r\n    active: active,\r\n    disabled: disabled,\r\n    childBsPrefix: bsPrefix,\r\n    as: NavLink\r\n  }, title), React.createElement(Dropdown.Menu, {\r\n    role: menuRole,\r\n    rootCloseEvent: rootCloseEvent\r\n  }, children));\r\n});\r\nNavDropdown.displayName = 'NavDropdown';\r\nNavDropdown.propTypes = propTypes;\r\nNavDropdown.Item = Dropdown.Item;\r\nNavDropdown.Divider = Dropdown.Divider;\r\nNavDropdown.Header = Dropdown.Header;\r\nexport default NavDropdown;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,IAAIC,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;EACEC,EAAE,EAAEL,SAAS,CAACM,GAAG;EAEjB;EACAC,OAAO,EAAEP,SAAS,CAACQ,IAAI;EAEvB;EACAC,KAAK,EAAET,SAAS,CAACU,IAAI,CAACC,UAAU;EAEhC;EACAC,QAAQ,EAAEZ,SAAS,CAACa,IAAI;EAExB;EACAC,MAAM,EAAEd,SAAS,CAACa,IAAI;EAEtB;EACAE,QAAQ,EAAEf,SAAS,CAACgB,MAAM;EAE1B;AACF;AACA;AACA;AACA;EACEC,cAAc,EAAEjB,SAAS,CAACgB,MAAM;EAEhC;EACAE,QAAQ,EAAElB,SAAS,CAACgB;AACtB,CAAC;AACD,IAAIG,WAAW,GAAGpB,KAAK,CAACqB,UAAU,CAAC,UAAUC,IAAI,EAAEC,GAAG,EAAE;EACtD,IAAIjB,EAAE,GAAGgB,IAAI,CAAChB,EAAE;IACZI,KAAK,GAAGY,IAAI,CAACZ,KAAK;IAClBc,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IACxBL,QAAQ,GAAGG,IAAI,CAACH,QAAQ;IACxBD,cAAc,GAAGI,IAAI,CAACJ,cAAc;IACpCF,QAAQ,GAAGM,IAAI,CAACN,QAAQ;IACxBH,QAAQ,GAAGS,IAAI,CAACT,QAAQ;IACxBE,MAAM,GAAGO,IAAI,CAACP,MAAM;IACpBU,KAAK,GAAG1B,6BAA6B,CAACuB,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;EAE5I,OAAOtB,KAAK,CAAC0B,aAAa,CAACxB,QAAQ,EAAEJ,QAAQ,CAAC;IAC5CyB,GAAG,EAAEA;EACP,CAAC,EAAEE,KAAK,EAAE;IACRE,EAAE,EAAExB;EACN,CAAC,CAAC,EAAEH,KAAK,CAAC0B,aAAa,CAACxB,QAAQ,CAAC0B,MAAM,EAAE;IACvCtB,EAAE,EAAEA,EAAE;IACNuB,QAAQ,EAAE,IAAI;IACdd,MAAM,EAAEA,MAAM;IACdF,QAAQ,EAAEA,QAAQ;IAClBiB,aAAa,EAAEX,QAAQ;IACvBQ,EAAE,EAAEvB;EACN,CAAC,EAAEM,KAAK,CAAC,EAAEV,KAAK,CAAC0B,aAAa,CAACxB,QAAQ,CAAC6B,IAAI,EAAE;IAC5CC,IAAI,EAAEhB,QAAQ;IACdE,cAAc,EAAEA;EAClB,CAAC,EAAEM,QAAQ,CAAC,CAAC;AACf,CAAC,CAAC;AACFJ,WAAW,CAACa,WAAW,GAAG,aAAa;AACvCb,WAAW,CAACf,SAAS,GAAGA,SAAS;AACjCe,WAAW,CAACc,IAAI,GAAGhC,QAAQ,CAACgC,IAAI;AAChCd,WAAW,CAACe,OAAO,GAAGjC,QAAQ,CAACiC,OAAO;AACtCf,WAAW,CAACgB,MAAM,GAAGlC,QAAQ,CAACkC,MAAM;AACpC,eAAehB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}